name: Deploy to AWS ECS
on:
  push:
    branches: [master]
permissions:
  contents: read

jobs:
  build:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image
        run: docker build -t springmovieapp .
      - name: Tag Docker image
        run: docker tag springmovieapp ${{ secrets.DOCKER_USERNAME }}/springmovieapp
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/springmovieapp

        # steps:
        #   - name: Checkout
        #     uses: actions/checkout@v4
        #   - name: Login to Docker Hub
        #     run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        #   - name: Build Docker image
        #     run: docker-compose up
        #   - name: Tag Docker image
        #     run: docker tag springmovieapp ${{ secrets.DOCKER_USERNAME }}/springmovieapp
        #   - name: Push Docker image to Docker Hub
        #     run: docker push ${{ secrets.DOCKER_USERNAME }}/springmovieapp

  deploy:
    needs: build
    runs-on: [springmovie-ec2]
    steps:
      - name: Delete old container
        run: docker rm -f springmovieapp
      - name: Pull image from docker hub
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/springmovieapp
      - name: Run new container
        run: docker run -d -p 8080:8080 --name springmovieapp ${{ secrets.DOCKER_USERNAME }}/springmovieapp
